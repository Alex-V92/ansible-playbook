---
# tasks file for mysql
- name: Add the OS specific variables
  include_vars: "{{ ansible_os_family }}.yml"

- name: Install the mysql packages in Debian derivatives
  become: true
  apt:
    name:
      - "{{ item }}"
    state: latest
    update_cache: yes
  with_items:
    - "{{ mysql_packages }}"
    - "{{ mysql_extra_packages_deb }}"
  when: ansible_os_family == 'Debian'

- name: Install the MySQL-python through pip
  become: true
  pip:
    name: "{{ item }}"
  with_items:
    - "{{ python_packages }}"
  when: ansible_os_family == 'Debian'

- name: Copy the my.cnf file
  become: true
  template:
    src: ".my.cnf.{{ ansible_os_family }}.j2"
    dest: "{{ mysql_conf_dir }}/my.cnf"
  notify:
   - restart mysql

- name: Create the directory /etc/mysql/conf.d
  file:
    path: /etc/mysql/conf.d
    state: directory
  notify:
   - restart mysql

- name: Deploy mysql config to conf.d
  become: true
  template:
    src: mysql.cnf.j2
    dest: /etc/mysql/conf.d/mysql.cnf
  notify:
    - restart mysql

- name: Start the mysql services
  become: true
  service:
    name: "{{ mysql_service }}"
    state: started
    enabled: yes

- name: Update mysql root password for all root accounts
  become: true
  mysql_user:
    check_implicit_admin: true
    login_user: root
    login_unix_socket: /var/run/mysqld/mysqld.sock
    host: "{{ item }}"
    name: root
    password: "{{ mysql_root_db_pass }}"
  with_items:
   - "{{ ansible_hostname }}"
   - 127.0.0.1
   - ::1
   - localhost

- name: Copy .my.cnf file with root password credentials
  template:
    src: .my.cnf.j2
    dest: ~/.my.cnf
    mode: 0600

- name: Create the database's
  mysql_db:
    login_user: root
    login_unix_socket: /var/run/mysqld/mysqld.sock
    login_password: "{{ mysql_root_db_pass }}"
    name: "{{ item.name }}"
    state: present
  with_items:
    - "{{ mysql_db }}"
  when: mysql_db|lower() != 'none'

- name: Create the database users
  mysql_user:
    login_user: root
    login_unix_socket: /var/run/mysqld/mysqld.sock
    login_password: "{{ mysql_root_db_pass }}"
    name: "{{ item.name }}"
    password: "{{ item.pass|default('verystrong') }}"
    priv: "{{ item.priv|default('*.*:ALL') }}"
    state: present
    host: "{{ item.host | default('localhost') }}"
  with_items:
    - "{{ mysql_users }}"
  when: mysql_users|lower() != 'none'