- name: Add repository for PHP
  become: true
  apt_repository: repo="ppa:ondrej/php" update_cache=yes

- name: Install php-fpm
  become: true
  apt:
    name:
      - "php{{ php_version }}-fpm"
    update_cache: yes 
    state: latest

- name: Install modules
  become: true
  apt: 
    name: php{{ php_version }}-{{ item }}
    update_cache: yes 
    state: latest
  with_items: "{{ php_modules }}"
  notify: reload php-fpm

- name: Install mcrypt
  become: true
  apt: 
    name:
      - php{{ php_version }}-mcrypt
    update_cache: yes 
    state: latest
  when: php_version == 5.6  

- name: Configure php cli
  become: true
  template:
    src: templates/cli/php{{ php_version }}.ini.j2
    dest: /etc/php/{{ php_version }}/cli/php.ini

- name: Configure php fpm
  become: true
  template:
    src: templates/fpm/php{{ php_version }}.ini.j2
    dest: /etc/php/{{ php_version }}/fpm/php.ini
  notify:
    - restart php-fpm

- name: Configure php fpm pool
  become: true
  template:
    src: templates/pool.d/{{ php_version }}.www.conf.j2
    dest: /etc/php/{{ php_version }}/fpm/pool.d/www.conf
  notify:
    - restart php-fpm

- name: Check if Composer is installed.
  stat: "path={{ composer_path }}"
  register: composer_bin

- name: Install composer
  when: not composer_bin.stat.exists
  block:
    - get_url:
        url: https://getcomposer.org/installer
        dest: ~/composer-setup.php
    - get_url:
        url: https://composer.github.io/installer.sig
        dest: ~/installer.sig
    - template: 
        src: composer_check.php
        dest: ~/composer_check.php
    - shell: php composer_check.php installer.sig
      register: composer_verify
    - file:
        path: ~/composer_check.php
        state: absent
    - shell: php composer-setup.php --install-dir=/usr/local/bin --filename=composer
      become: true
      when: composer_verify.stdout == 'Installer verified'
    - debug:
        msg: Composer installer corrupt
      when: composer_verify.stdout != 'Installer verified'

- name: Configure imagick
  become: true
  when: "'imagick' in php_modules"
  lineinfile: 
    path: /etc/ImageMagick-6/policy.xml
    regexp: '<policy domain="resource" name="{{ item.name }}" value=".*"/>'
    line: '<policy domain="resource" name="{{ item.name }}" value="{{ item.value }}"/>'
  with_list:
    - { name: 'memory', value: '{{ php_imagick_policy_memory }}' } 
    - { name: 'map', value: '{{ php_imagick_policy_map }}' } 
    - { name: 'width', value: '{{ php_imagick_policy_width }}' } 
    - { name: 'height', value: '{{ php_imagick_policy_height }}' }
    - { name: 'area', value: '{{ php_imagick_policy_area }}' }
    - { name: 'disk', value: '{{ php_imagick_policy_disk }}' }